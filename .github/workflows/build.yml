name: Build
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release:
        description: "Create a release"
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: 22

jobs:
  version:
    name: "Generate version"
    uses: ./.github/workflows/version.yml
    with:
      release: ${{ github.event.inputs.release }}

  cms-plugin-build:
    name: "cms-plugin: Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        uses: ./.github/actions/build
        with:
          package: "cms-plugin"
      - name: Upload cms-plugin 'dist' directory
        uses: actions/upload-artifact@v4
        with:
          name: cms-plugin-dist
          path: libs/cms-plugin/dist

  common-build:
    name: "common: Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        uses: ./.github/actions/build
        with:
          package: "common"
      - name: Upload common 'dist' directory
        uses: actions/upload-artifact@v4
        with:
          name: common-dist
          path: libs/common/dist

  releaser-build:
    name: "releaser: Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        uses: ./.github/actions/build
        with:
          package: "releaser"
      - name: Upload releaser 'dist' directory
        uses: actions/upload-artifact@v4
        with:
          name: releaser-dist
          path: tools/releaser/dist

  frontend-build:
    name: "frontend: Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        uses: ./.github/actions/build
        with:
          package: "frontend"
      - name: Upload frontend 'dist' directory
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: libs/frontend/dist

  cms-example-build:
    name: "cms-example: Build"
    runs-on: ubuntu-latest
    needs: [cms-plugin-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Download cms-plugin 'dist' directory
        uses: actions/download-artifact@v4
        with:
          name: cms-plugin-dist
          path: libs/cms-plugin/dist
      - name: Install dependencies
        run: pnpm --filter cms-example --filter cms-plugin install
      - name: Build
        run: pnpm --filter cms-example build

  frontend-example-build:
    name: "frontend-example: Build"
    runs-on: ubuntu-latest
    needs: [frontend-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Download frontend 'dist' directory
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: libs/frontend/dist
      - name: Install dependencies
        run: pnpm --filter frontend-example --filter frontend install
      - name: Build
        run: pnpm --filter frontend-example build

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs:
      - cms-plugin-build
      - common-build
      - releaser-build
      - frontend-build
      - cms-example-build
      - frontend-example-build
      - version
    if: needs.version.outputs.is_new_release == 'true'
    permissions:
      contents: write
    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        uses: felixmokross/webplatform/.github/actions/setup@main
      - name: Install dependencies
        run: pnpm --workspace-root install
      - name: Create release
        run: |
          pnpm releaser publish --draft ${{ needs.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cms-plugin-publish:
    name: "cms-plugin: Publish"
    runs-on: ubuntu-latest
    needs: [create-release, version]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Download cms-plugin 'dist' directory
        uses: actions/download-artifact@v4
        with:
          name: cms-plugin-dist
          path: libs/cms-plugin/dist
      - name: Publish
        uses: ./.github/actions/publish
        with:
          package: "cms-plugin"
          version: ${{ needs.version.outputs.version }}
          prerelease_tag: ${{ needs.version.outputs.prerelease_tag }}
          npmToken: ${{ secrets.NPM_TOKEN }}

  common-publish:
    name: "common: Publish"
    runs-on: ubuntu-latest
    needs: [create-release, version]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Download common 'dist' directory
        uses: actions/download-artifact@v4
        with:
          name: common-dist
          path: libs/common/dist
      - name: Publish
        uses: ./.github/actions/publish
        with:
          package: "common"
          version: ${{ needs.version.outputs.version }}
          prerelease_tag: ${{ needs.version.outputs.prerelease_tag }}
          npmToken: ${{ secrets.NPM_TOKEN }}

  releaser-publish:
    name: "releaser: Publish"
    runs-on: ubuntu-latest
    needs: [create-release, version]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Download releaser 'dist' directory
        uses: actions/download-artifact@v4
        with:
          name: releaser-dist
          path: tools/releaser/dist
      - name: Publish
        uses: ./.github/actions/publish
        with:
          package: "releaser"
          version: ${{ needs.version.outputs.version }}
          prerelease_tag: ${{ needs.version.outputs.prerelease_tag }}
          npmToken: ${{ secrets.NPM_TOKEN }}

  frontend-publish:
    name: "frontend: Publish"
    runs-on: ubuntu-latest
    needs: [create-release, version]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Download frontend 'dist' directory
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: libs/frontend/dist
      - name: Publish
        uses: ./.github/actions/publish
        with:
          package: "frontend"
          version: ${{ needs.version.outputs.version }}
          prerelease_tag: ${{ needs.version.outputs.prerelease_tag }}
          npmToken: ${{ secrets.NPM_TOKEN }}
