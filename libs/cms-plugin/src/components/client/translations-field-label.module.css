.container {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  gap: 1rem;
}

.translationsButton {
  background-color: transparent;
  text-decoration-line: underline;
  cursor: pointer;
  border-style: none;
  padding: 0;
  color: var(--theme-elevation-800);

  &:hover:not(:disabled) {
    @media (hover: hover) {
      color: var(--theme-elevation-1000);
    }
  }

  &:disabled {
    opacity: 50%;
    cursor: not-allowed;
  }
}

.loadingIndicator {
  display: flex;
  align-items: center;
  justify-content: center;

  height: calc(100vh - 10rem);

  font-size: 1.5rem;
  line-height: 1.3333;

  color: var(--theme-elevation-600);
}

.selectLocalesText {
  margin-top: 2rem;
}

.selectLocalesList {
  margin-top: 2rem;

  > div {
    margin-top: 1rem;
  }
}

.selectLocalesNote {
  margin-top: 2rem;
}

.selectLocalesFooter {
  margin-top: 0.25rem;
}

.tableWrapper {
  max-height: calc(100vh - 10rem);
  overflow-y: auto;

  > table {
    min-width: unset;
    table-layout: fixed;

    > thead,
    > tfoot {
      background-color: var(--theme-bg);
    }
  }
}

.tableHeaderFooterCell {
  padding-inline: 3rem;
  padding-block: 0.75rem;

  > div {
    display: flex;
    gap: 1rem;
    align-items: center;
  }
}

.tableHeaderFooterCellHighlighted {
  background-color: var(--theme-elevation-50);
  color: var(--theme-elevation-700);
}

.tableHeaderFooterCellNonHighlighted {
  background-color: var(--theme-bg);
}

.tableHeaderFooterCellStickyLeft {
  position: sticky;
  left: 0;
}

.tableHeaderFooterCellStickyTop {
  position: sticky;
  top: 0;
  z-index: 20;
  box-shadow:
    0 1px 3px 0 rgb(0 0 0 / 0.1),
    0 1px 2px -1px rgb(0 0 0 / 0.1);
}

.tableHeaderFooterCellStickyBottom {
  position: sticky;
  bottom: 0;
}

.tableHeaderFooterCellStickyTopLeft {
  z-index: 30;
}

.tableHeaderFooterCellStickyBottomLeft {
  z-index: 20;
}

.tableContentCell {
  padding: 3rem;
  background-color: var(--theme-elevation-50);

  &.highlighted {
    background-color: var(--theme-elevation-100);
  }

  &.stickyLeft {
    position: sticky;
    left: 0;
    z-index: 10;
  }
}

.tableContentCellWide {
  width: 40rem;
  min-width: 40rem;
}

.tableContentCellNonWide {
  width: 24rem;
  min-width: 24rem;
}

.richTextHtml {
  pointer-events: none;
  hyphens: auto;
  font-family: var(--font-serif);

  font-size: 1.25rem;
  line-height: 1.8;
  :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-size: 1.2em;
    line-height: 1.5;
    margin-top: 1em;
    margin-bottom: 1em;
  }
  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1.0666667em;
  }
  :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 2.8em;
    margin-top: 0;
    margin-bottom: 0.8571429em;
    line-height: 1;
  }
  :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.8em;
    margin-top: 1.5555556em;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }
  :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.5em;
    margin-top: 1.6em;
    margin-bottom: 0.6666667em;
    line-height: 1.3333333;
  }
  :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
    border-radius: 0.3125rem;
    padding-top: 0.25em;
    padding-inline-end: 0.4em;
    padding-bottom: 0.25em;
    padding-inline-start: 0.4em;
  }
  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
  }
  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.8611111em;
  }
  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
  }
  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.7777778;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.1111111em;
    padding-inline-end: 1.3333333em;
    padding-bottom: 1.1111111em;
    padding-inline-start: 1.3333333em;
  }
  :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-inline-start: 1.6em;
  }
  :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-inline-start: 1.6em;
  }
  :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.4em;
  }
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.4em;
  }
  :where(.tw\:prose-xl > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }
  :where(.tw\:prose-xl > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.2em;
  }
  :where(.tw\:prose-xl > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.2em;
  }
  :where(.tw\:prose-xl > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.2em;
  }
  :where(.tw\:prose-xl > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.2em;
  }
  :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }
  :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.2em;
  }
  :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.6em;
    padding-inline-start: 1.6em;
  }
  :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }
  :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.5555556;
  }
  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-inline-start: 0.6666667em;
  }
  :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-top: 0.8888889em;
    padding-inline-end: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-inline-start: 0.6666667em;
  }
  :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }
  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.5555556;
    margin-top: 1em;
  }
  :where(.tw\:prose-xl > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  :where(.tw\:prose-xl > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }

  li:has(> ul:first-child),
  li:has(> ol:first-child) {
    list-style-type: none;
    counter-increment: list-counter 0;
  }

  ol {
    counter-reset: list-counter;
  }

  ol > li {
    counter-increment: list-counter;
  }

  ol > li:has(> ul:first-child)::marker,
  ol > li:has(> ol:first-child)::marker {
    content: "";
  }

  ol > li::marker {
    content: counter(list-counter) ". ";
  }
}
